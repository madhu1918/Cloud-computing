[{
  "title": "Python MapReduce Framework",
  "activityType": "reading",
  "quizDescription": [{
      "text": "You will be provided with a python library called MapReduce.py that implements the MapReduce programming model. The framework faithfully implements the MapReduce programming model, but it executes entirely on a single machine -- it does not involve parallel computation.<br><br>Here is the word count example discussed in class implemented as a MapReduce program using the framework:"
    },
    {
      "image": {
        "imageName": "",
        "imageSRC": "image-1.png"
      }
    },
    {
      "image": {
        "imageName": "",
        "imageSRC": "image-2.png"
      }
    },
    {
      "image": {
        "imageName": "",
        "imageSRC": "image-3.png"
      }
    },
    {
      "image": {
        "imageName": "",
        "imageSRC": "image-4.png"
      }
    }, {
      "text": "In Part 1, we create a MapReduce object that is used to pass data between the map function and the reduce function; you wonâ€™t need to use this object directly.<br><br>In Part 2, the mapper function tokenizes each document and emits a key-value pair. The key is a word formatted as a string and the value is the integer 1 to indicate an occurrence of word.<br><br>In Part 3, the reducer function sums up the list of occurrence counts and emits a count for word. Since the mapper function emits the integer 1 for each word, each element in the list_of_values is the integer 1.<br><br>The list of occurrence counts is summed and a (word, total) tuple is emitted where word is a string and total is an integer.<br><br>In Part 4, the code loads the json le and executes the MapReduce query which prints the result to stdout."
    }
  ]
}]